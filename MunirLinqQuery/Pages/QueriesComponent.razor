
@page "/query"
@using MunirLinqQuery.Data
@inject StudentDbContext _db

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f9f9f9;
        padding: 20px;
        color: #333;
    }

    h3, h4 {
        margin-bottom: 10px;
    }

    .query-container {
        margin-bottom: 20px;
    }

    .result-list {
        list-style: none;
        padding: 0;
    }

    .result-item {
        margin-bottom: 10px;
    }
</style>

<h3>Query A: a. Write a LINQ query to get the names and room numbers for classes with more than 100 students.</h3>
<div class="query-container">
    <ul class="result-list">
        @foreach (var item in query1)
        {
            <li class="result-item">
                @item.name - Room: @item.roomNo
            </li>
        }
    </ul>
</div>

<h3>Query B: b. Write a LINQ query to get the ids and majors of students who take no classes with teachers in department 22.</h3>
<div class="query-container">
    <ul class="result-list">
        @foreach (var item in query2)
        {
            <li class="result-item">
                Student ID: @item.sid - Major: @item.major
            </li>
        }
    </ul>
</div>

<h4>Additional-Query 1: Get the names of students who are enrolled in more than two classes. Display the student name and the number of classes they are enrolled in.</h4>
<div class="query-container">
    <ul class="result-list">
        @foreach (var item in adtquery1)
        {
            <li class="result-item">
                @item.sname - Enrolled Classes: @item.EnrolledClassesCount
            </li>
        }
    </ul>
</div>

<h4>Additional-Query 2: Retrieve the names of students who are enrolled in classes and have not yet received any marks.</h4>
<div class="query-container">
    <ul class="result-list">
        @foreach (var item in adtquery2)
        {
            <li class="result-item">
                @item.sname
            </li>
        }
    </ul>
</div>

<h3>Additional-Query 3: Find the average age of students in each major. Display the major and the average age.</h3>
<div class="query-container">
    <ul class="result-list">
        @foreach (var item in adtquery3)
        {
            <li class="result-item">
                Major: @item.Major - Average Age: @item.AverageAge
            </li>
        }
    </ul>
</div>

@code {
    List<Class> query1 = new List<Class>();
    List<Student> query2 = new List<Student>();
    List<Student> adtquery1 = new List<Student>();
    List<Student> adtquery2 = new List<Student>();
    List<TempStudentAtr> adtquery3 = new List<TempStudentAtr>();

    protected override void OnInitialized()
    {
        LoadQuery();
    }

    void LoadQuery()
    {
        query1 = (from c in _db.Classes
                  where c.students.Count <= 100
                  select new Class
                      {
                          name = c.name,
                          roomNo = c.roomNo
                      }).ToList();

        query2 = (from s in _db.std
                  where s.classes.All(c => c.Faculty.deptid != 22)
                  select new Student
                      {
                          sid = s.sid,
                          major = s.major
                      }).ToList();

        adtquery1 = (from s in _db.std
                     where s.classes.Count > 2
                     select new Student
                         {
                             sname = s.sname,
                             EnrolledClassesCount = s.classes.Count
                         }).ToList();

        adtquery2 = (from s in _db.std
                     where s.marks == 0
                     select new Student
                         {
                             sname = s.sname
                         }).ToList();

        adtquery3 = (from s in _db.std
                     group s by s.major into g
                     select new TempStudentAtr
                         {
                             Major = g.Key,
                             AverageAge = g.Average(s => s.age)
                         }).ToList();
    }

    //creating a temperoray class and creating major and avgAge
    public class TempStudentAtr
    {
        public string Major { get; set; }
        public double AverageAge { get; set; }
    }

}
